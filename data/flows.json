[
    {
        "id": "988517b8.810bd8",
        "type": "tab",
        "label": "Front Eleves",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5a8d8e81.c9b3a",
        "type": "tab",
        "label": "Front équipe pédagogique",
        "disabled": false,
        "info": ""
    },
    {
        "id": "895a135a.82608",
        "type": "tab",
        "label": "Routes",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1bbdcb59.0d8c55",
        "type": "tab",
        "label": "Spreadsheet",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6baaf188.a25a6",
        "type": "subflow",
        "name": "Analyse",
        "info": "",
        "in": [
            {
                "x": 180,
                "y": 120,
                "wires": [
                    {
                        "id": "4894cc5.bc7c634"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 800,
                "y": 220,
                "wires": [
                    {
                        "id": "a9d97245.ac20c",
                        "port": 1
                    }
                ]
            }
        ]
    },
    {
        "id": "f2f4cbd3.ad9a78",
        "type": "subflow",
        "name": "HTML Body",
        "info": "",
        "in": [
            {
                "x": 400,
                "y": 160,
                "wires": [
                    {
                        "id": "1c4a3d23.17b093"
                    }
                ]
            }
        ],
        "out": []
    },
    {
        "id": "7a79c796.f6c888",
        "type": "ms-config",
        "z": "",
        "name": ""
    },
    {
        "id": "1b98bf04.b1d071",
        "type": "google-service-account",
        "z": "",
        "name": "Hackathon - Sheet",
        "scope": [
            "https://www.googleapis.com/auth/spreadsheets"
        ],
        "way": "json",
        "check_dialogflow": "",
        "check_speech": ""
    },
    {
        "id": "90831821.61a9d8",
        "type": "mongodb",
        "z": "",
        "name": ""
    },
    {
        "id": "cccba1a.e430a6",
        "type": "google-service-account",
        "z": "",
        "name": "Hackhaton - NLP",
        "scope": [
            "https://www.googleapis.com/auth/cloud-platform"
        ],
        "way": "json",
        "check_dialogflow": "",
        "check_speech": ""
    },
    {
        "id": "995a5ab9.429158",
        "type": "ms-text-analytics",
        "z": "6baaf188.a25a6",
        "name": "",
        "input": "docs",
        "output": "",
        "key": "7a79c796.f6c888",
        "api": "sentiment",
        "inputType": "msg",
        "outputType": "msg",
        "endpointType": "str",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "4a20bc36.b652d4"
            ]
        ]
    },
    {
        "id": "4894cc5.bc7c634",
        "type": "function",
        "z": "6baaf188.a25a6",
        "name": "Format",
        "func": "let docs = {\"documents\" : [{ \"id\":\"1\", \"text\": msg.payload }]}\n\nmsg.docs    = docs\nmsg.results = { intents : [] }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 300,
        "y": 120,
        "wires": [
            [
                "995a5ab9.429158"
            ]
        ]
    },
    {
        "id": "4a20bc36.b652d4",
        "type": "function",
        "z": "6baaf188.a25a6",
        "name": "Score",
        "func": "msg.results.score = msg.payload.documents[0].score\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 120,
        "wires": [
            [
                "83198be3.848fe8"
            ]
        ]
    },
    {
        "id": "b9e808ef.879ee8",
        "type": "dialogflow",
        "z": "6baaf188.a25a6",
        "name": "",
        "tokenv1": "",
        "tokenv2": "cccba1a.e430a6",
        "session": "random",
        "sessionType": "str",
        "language": "fr",
        "languageType": "str",
        "text": "payload",
        "textType": "msg",
        "intent": "payload",
        "intentType": "msg",
        "action": "query",
        "actionitemaddupd": "entities-single",
        "actionitemget": "entities-single",
        "actionitemdel": "entities-single",
        "selaction": "get",
        "itemid": "",
        "itemidType": "msg",
        "object": "",
        "objectType": "msg",
        "version": "v2",
        "x": 850,
        "y": 160,
        "wires": [
            [
                "a6689b0a.757c88"
            ],
            [
                "2cc192a.915506e"
            ]
        ]
    },
    {
        "id": "83198be3.848fe8",
        "type": "ms-text-analytics",
        "z": "6baaf188.a25a6",
        "name": "",
        "input": "docs",
        "output": "",
        "key": "7a79c796.f6c888",
        "api": "keyPhrases",
        "inputType": "msg",
        "outputType": "msg",
        "endpointType": "str",
        "x": 490,
        "y": 160,
        "wires": [
            [
                "a9d97245.ac20c"
            ]
        ]
    },
    {
        "id": "a9d97245.ac20c",
        "type": "loop-management",
        "z": "6baaf188.a25a6",
        "name": "",
        "scope": "msg",
        "input": "payload.documents[0].keyPhrases",
        "inputType": "msg",
        "output": "payload",
        "outputType": "msg",
        "x": 690,
        "y": 160,
        "wires": [
            [
                "b9e808ef.879ee8"
            ],
            []
        ]
    },
    {
        "id": "a6689b0a.757c88",
        "type": "function",
        "z": "6baaf188.a25a6",
        "name": "Intent",
        "func": "let intent = msg.payload.queryResult.intent.displayName\nif (intent){\n    msg.results.intents.push(intent)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1010,
        "y": 140,
        "wires": [
            [
                "a9d97245.ac20c"
            ]
        ]
    },
    {
        "id": "2cc192a.915506e",
        "type": "debug",
        "z": "6baaf188.a25a6",
        "name": "Error",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "626bf870.4d11b8",
        "type": "subflow:6baaf188.a25a6",
        "z": "895a135a.82608",
        "name": "",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "6b5cc98c.5580b8",
                "40595cf.da240a4"
            ]
        ]
    },
    {
        "id": "6b5cc98c.5580b8",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "results",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "40595cf.da240a4",
        "type": "function",
        "z": "895a135a.82608",
        "name": "Update",
        "func": "let mood = msg.mood\n\nmood.text_score = msg.results.score\nmood.tags.concat(msg.results.intents)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 620,
        "y": 160,
        "wires": [
            [
                "32576f8a.22ac7"
            ]
        ]
    },
    {
        "id": "32576f8a.22ac7",
        "type": "nosql",
        "z": "895a135a.82608",
        "name": "",
        "server-type": "mongodb",
        "collection": "moods",
        "collectionType": "str",
        "key": "",
        "offset": "",
        "offsetType": "num",
        "limit": "",
        "limitType": "num",
        "value": "mood",
        "operation": "add",
        "merge": false,
        "server-mongodb": "90831821.61a9d8",
        "server-nedb": "",
        "x": 790,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fcd8aecc.ef51",
        "type": "nosql",
        "z": "895a135a.82608",
        "name": "",
        "server-type": "mongodb",
        "collection": "moods",
        "collectionType": "str",
        "key": "{}",
        "offset": "",
        "offsetType": "num",
        "limit": "",
        "limitType": "num",
        "value": "",
        "operation": "find",
        "merge": false,
        "server-mongodb": "90831821.61a9d8",
        "server-nedb": "",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "28e66f0b.ebb4c"
            ]
        ]
    },
    {
        "id": "9ef6fd8c.b0dd6",
        "type": "http in",
        "z": "895a135a.82608",
        "name": "",
        "url": "/mood",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 100,
        "wires": [
            [
                "7f98c098.eeac5",
                "6f976feb.ef7f9"
            ]
        ]
    },
    {
        "id": "7f98c098.eeac5",
        "type": "function",
        "z": "895a135a.82608",
        "name": "Build",
        "func": "const moment = global.get('tzModule');\nlet now = moment().tz('Europe/Paris')\n\nlet mood = {\n    \"date\": now.toISOString(),\n    \"user\": \"12345\", \n    \"text\": \"\", \n    \"text_score\": 0,\n    \"tags\": []\n}\n\n// Comment UserID is REQUIRED\nif (!msg.payload.user){ return msg; }\n\nmood.text = msg.payload.text;\nmood.user = msg.payload.user;\n\n// FIXME: Handle attachments\nmsg.mood    = mood;\nmsg.payload = mood.text\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "626bf870.4d11b8",
                "8bf4c5ec.f8ae38"
            ]
        ]
    },
    {
        "id": "6f976feb.ef7f9",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 330,
        "y": 60,
        "wires": []
    },
    {
        "id": "1c4a3d23.17b093",
        "type": "file in",
        "z": "f2f4cbd3.ad9a78",
        "name": "",
        "filename": "webapp/static/main.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 610,
        "y": 160,
        "wires": [
            [
                "305c7b5.cac1484"
            ]
        ]
    },
    {
        "id": "305c7b5.cac1484",
        "type": "function",
        "z": "f2f4cbd3.ad9a78",
        "name": "Render",
        "func": "let mustache = global.get('mustacheModule');\nmsg.payload = mustache.render(msg.payload, msg.content)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 820,
        "y": 160,
        "wires": [
            [
                "e28e13ff.2e6e7"
            ]
        ]
    },
    {
        "id": "e28e13ff.2e6e7",
        "type": "http response",
        "z": "f2f4cbd3.ad9a78",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 950,
        "y": 160,
        "wires": []
    },
    {
        "id": "3364651e.b53cca",
        "type": "http in",
        "z": "5a8d8e81.c9b3a",
        "name": "",
        "url": "/activites",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "cf3e7606.11ac08"
            ]
        ]
    },
    {
        "id": "5f1bae73.7dbe6",
        "type": "function",
        "z": "5a8d8e81.c9b3a",
        "name": "Content",
        "func": "msg.content = {\n    menu : {\n        activites : true,\n        alertes : false\n    },\n    content : msg.payload\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 320,
        "wires": [
            [
                "77cee08e.b57bc"
            ]
        ]
    },
    {
        "id": "1bc8c5ac.b65c5a",
        "type": "http in",
        "z": "5a8d8e81.c9b3a",
        "name": "",
        "url": "/alertes",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "4c3e2ca8.46a8b4"
            ]
        ]
    },
    {
        "id": "4c3e2ca8.46a8b4",
        "type": "function",
        "z": "5a8d8e81.c9b3a",
        "name": "Content",
        "func": "msg.content = {\n    menu : {\n        activites : false,\n        alertes : true\n    },\n    content : \"coucou\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 320,
        "y": 400,
        "wires": [
            [
                "77cee08e.b57bc"
            ]
        ]
    },
    {
        "id": "77cee08e.b57bc",
        "type": "subflow:f2f4cbd3.ad9a78",
        "z": "5a8d8e81.c9b3a",
        "x": 510,
        "y": 360,
        "wires": []
    },
    {
        "id": "da74f4f5.4ff3a8",
        "type": "http in",
        "z": "988517b8.810bd8",
        "name": "",
        "url": "/mymood",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "7486a260.c33c7c"
            ]
        ]
    },
    {
        "id": "4270ae56.93645",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "mustache",
        "func": "let mustache = global.get('mustacheModule');\n\nmsg.payload = mustache.render(msg.payload, {\n    \"serverUrl\": global.get('CONFIG').server.host,\n    \"pictures\" : msg.selectedPictures\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1490,
        "y": 240,
        "wires": [
            [
                "953daff6.5ac56"
            ]
        ]
    },
    {
        "id": "2e9f0c77.b9e334",
        "type": "file in",
        "z": "988517b8.810bd8",
        "name": "",
        "filename": "webapp/static/mymood.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 1230,
        "y": 240,
        "wires": [
            [
                "4270ae56.93645"
            ]
        ]
    },
    {
        "id": "953daff6.5ac56",
        "type": "http response",
        "z": "988517b8.810bd8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1700,
        "y": 240,
        "wires": []
    },
    {
        "id": "7486a260.c33c7c",
        "type": "google-spreadsheet",
        "z": "988517b8.810bd8",
        "name": "",
        "auth": "1b98bf04.b1d071",
        "sheet": "1tJFncmR66AS55qmLiSWH1OvpGTirCiNDvO1_vQ4LDe4",
        "range": "pictures",
        "method": "append",
        "direction": "line",
        "action": "get",
        "clear": false,
        "line": false,
        "column": true,
        "fields": "all",
        "save": "_sheet",
        "selfields": [
            ""
        ],
        "cell_l": "",
        "cell_c": "",
        "input": "",
        "output": "payload",
        "saveType": "global",
        "inputType": "msg",
        "outputType": "msg",
        "sheetType": "str",
        "rangeType": "str",
        "cell_lType": "str",
        "cell_cType": "str",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "d1f4763a.7d2078"
            ],
            []
        ]
    },
    {
        "id": "754f96b5.54d1a8",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "select random",
        "func": "msg.selectedPictures = [];\n\nfor (let type of Object.keys(msg.pictures)) {\n    let pictures = msg.pictures[type];\n    let max = pictures.length;\n    \n    let index = Math.floor(Math.random() * Math.floor(max));\n    msg.selectedPictures.push(pictures[index]);\n    \n    \n}\n\nfunction shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\nshuffle(msg.selectedPictures)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 990,
        "y": 240,
        "wires": [
            [
                "2e9f0c77.b9e334"
            ]
        ]
    },
    {
        "id": "d1f4763a.7d2078",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "index by tag",
        "func": "msg.pictures = {};\n\nfor(let picture of msg.payload) {\n    msg.pictures[picture.type] = msg.pictures[picture.type] || [];\n    msg.pictures[picture.type].push(picture);\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "754f96b5.54d1a8"
            ]
        ]
    },
    {
        "id": "eade6041.28d47",
        "type": "inject",
        "z": "895a135a.82608",
        "name": "List All Moods",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 220,
        "wires": [
            [
                "fcd8aecc.ef51"
            ]
        ]
    },
    {
        "id": "28e66f0b.ebb4c",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 510,
        "y": 220,
        "wires": []
    },
    {
        "id": "cf3e7606.11ac08",
        "type": "file in",
        "z": "5a8d8e81.c9b3a",
        "name": "",
        "filename": "webapp/static/activites.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "5f1bae73.7dbe6"
            ]
        ]
    },
    {
        "id": "8bf4c5ec.f8ae38",
        "type": "http response",
        "z": "895a135a.82608",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "4d05e4dc.80860c",
        "type": "function",
        "z": "895a135a.82608",
        "name": "Build",
        "func": "const moment = global.get('tzModule');\nlet now = moment().tz('Europe/Paris')\n\nlet alert = {\n    \"date\": now.toISOString(),\n    \"user\": \"12345\", \n    \"type\": \"harcelement\",\n    \"role\": \"witness\",\n    \"text\": \"\", \n    \"text_score\": 0,\n    \"attachment\" : \"\", \n    \"attachment_type\": \"\", \n    \"attachment_score\": 0,\n    \"tags\": []\n}\n\n// Comment userID is REQUIRED\nif (!msg.payload.user){ return msg; }\n\nalert.text = msg.payload.text;\nalert.user = msg.payload.user;\nalert.type = msg.payload.type; // FIXME: relies to the UI\nalert.role = \"witness\";        // FIXME: relies to the UI\n\n// FIXME: Handle attachments\n\n\nmsg.alert   = alert;\nmsg.payload = alert.text\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 330,
        "y": 520,
        "wires": [
            [
                "47575baa.144464",
                "82033db2.c8d87"
            ]
        ]
    },
    {
        "id": "b9d63410.1f94e8",
        "type": "http in",
        "z": "895a135a.82608",
        "name": "",
        "url": "/alert",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 160,
        "y": 520,
        "wires": [
            [
                "4d05e4dc.80860c",
                "77d367af.fbd378"
            ]
        ]
    },
    {
        "id": "77d367af.fbd378",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "47575baa.144464",
        "type": "http response",
        "z": "895a135a.82608",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 470,
        "y": 520,
        "wires": []
    },
    {
        "id": "82033db2.c8d87",
        "type": "subflow:6baaf188.a25a6",
        "z": "895a135a.82608",
        "name": "",
        "x": 480,
        "y": 560,
        "wires": [
            [
                "32eb95a7.6491fa",
                "87277541.bb95e8"
            ]
        ]
    },
    {
        "id": "87277541.bb95e8",
        "type": "function",
        "z": "895a135a.82608",
        "name": "Update",
        "func": "let alert = msg.alerts\n\nalert.text_score = msg.results.score\nalert.tags.concat(msg.results.intents)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 580,
        "wires": [
            [
                "dd873095.9e245"
            ]
        ]
    },
    {
        "id": "32eb95a7.6491fa",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "results",
        "x": 650,
        "y": 540,
        "wires": []
    },
    {
        "id": "dd873095.9e245",
        "type": "nosql",
        "z": "895a135a.82608",
        "name": "",
        "server-type": "mongodb",
        "collection": "alerts",
        "collectionType": "str",
        "key": "",
        "offset": "",
        "offsetType": "num",
        "limit": "",
        "limitType": "num",
        "value": "alert",
        "operation": "add",
        "merge": false,
        "server-mongodb": "90831821.61a9d8",
        "server-nedb": "",
        "x": 800,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "41645e82.6c064",
        "type": "nosql",
        "z": "895a135a.82608",
        "name": "",
        "server-type": "mongodb",
        "collection": "alerts",
        "collectionType": "str",
        "key": "{}",
        "offset": "",
        "offsetType": "num",
        "limit": "",
        "limitType": "num",
        "value": "",
        "operation": "find",
        "merge": false,
        "server-mongodb": "90831821.61a9d8",
        "server-nedb": "",
        "x": 350,
        "y": 660,
        "wires": [
            [
                "e70104ec.4e9d98"
            ]
        ]
    },
    {
        "id": "9c0914eb.a25aa8",
        "type": "inject",
        "z": "895a135a.82608",
        "name": "List All Alerts",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 150,
        "y": 660,
        "wires": [
            [
                "41645e82.6c064"
            ]
        ]
    },
    {
        "id": "e70104ec.4e9d98",
        "type": "debug",
        "z": "895a135a.82608",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 530,
        "y": 660,
        "wires": []
    },
    {
        "id": "ce40495f.4a9c18",
        "type": "google-spreadsheet",
        "z": "1bbdcb59.0d8c55",
        "name": "",
        "auth": "1b98bf04.b1d071",
        "sheet": "1tJFncmR66AS55qmLiSWH1OvpGTirCiNDvO1_vQ4LDe4",
        "range": "pictures",
        "method": "append",
        "direction": "column",
        "action": "get",
        "clear": false,
        "line": true,
        "column": false,
        "fields": "all",
        "save": "_sheet",
        "selfields": [
            ""
        ],
        "cell_l": "",
        "cell_c": "",
        "input": "",
        "output": "",
        "saveType": "global",
        "inputType": "msg",
        "outputType": "msg",
        "sheetType": "str",
        "rangeType": "str",
        "cell_lType": "str",
        "cell_cType": "str",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "392376b3.a05d3a"
            ],
            []
        ]
    },
    {
        "id": "ade0b2c2.174e4",
        "type": "inject",
        "z": "1bbdcb59.0d8c55",
        "name": "",
        "topic": "",
        "payload": "Get pictures",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 130,
        "y": 80,
        "wires": [
            [
                "ce40495f.4a9c18"
            ]
        ]
    },
    {
        "id": "392376b3.a05d3a",
        "type": "debug",
        "z": "1bbdcb59.0d8c55",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 550,
        "y": 60,
        "wires": []
    },
    {
        "id": "1fe90487.80d5cb",
        "type": "http in",
        "z": "988517b8.810bd8",
        "name": "",
        "url": "/confirm",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "b62a7c18.47d52"
            ]
        ]
    },
    {
        "id": "b6896332.867ca",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "mustache",
        "func": "let mustache = global.get('mustacheModule');\n\nmsg.payload = mustache.render(msg.payload, {\n    \"serverUrl\": global.get('CONFIG').server.host,\n    \"pictures\" : msg.selectedPictures\n})\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 640,
        "y": 520,
        "wires": [
            [
                "7f0e2fd9.aa064"
            ]
        ]
    },
    {
        "id": "b62a7c18.47d52",
        "type": "file in",
        "z": "988517b8.810bd8",
        "name": "",
        "filename": "webapp/static/confirm.html",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "x": 380,
        "y": 520,
        "wires": [
            [
                "b6896332.867ca"
            ]
        ]
    },
    {
        "id": "7f0e2fd9.aa064",
        "type": "http response",
        "z": "988517b8.810bd8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 520,
        "wires": []
    },
    {
        "id": "967c3d9e.4d187",
        "type": "http response",
        "z": "988517b8.810bd8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 660,
        "wires": []
    },
    {
        "id": "94bea754.e100a8",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "redirect",
        "func": "msg.payload = {\n    redirect: global.get('CONFIG').server.host + '/confirm'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1000,
        "y": 660,
        "wires": [
            [
                "967c3d9e.4d187"
            ]
        ]
    },
    {
        "id": "f155b458.245e18",
        "type": "http in",
        "z": "988517b8.810bd8",
        "name": "",
        "url": "/mymood",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 660,
        "wires": [
            [
                "cb7d719b.a05fe"
            ]
        ]
    },
    {
        "id": "ec1a1f1a.a18d1",
        "type": "nosql",
        "z": "988517b8.810bd8",
        "name": "",
        "server-type": "mongodb",
        "collection": "mood",
        "collectionType": "str",
        "key": "",
        "offset": "",
        "offsetType": "num",
        "limit": "",
        "limitType": "num",
        "value": "payload",
        "operation": "add",
        "merge": false,
        "server-mongodb": "90831821.61a9d8",
        "server-nedb": "",
        "x": 650,
        "y": 660,
        "wires": [
            [
                "94bea754.e100a8"
            ]
        ]
    },
    {
        "id": "cb7d719b.a05fe",
        "type": "function",
        "z": "988517b8.810bd8",
        "name": "prepare mood",
        "func": "const moment = global.get('tzModule');\nlet now = moment().tz('Europe/Paris');\n\nmsg.payload = {\n    date: now.toISOString(),\n    user: '123',\n    \"text\": msg.req.body.comment,\n    \"text_score\": 0,\n    \"picture\": msg.req.body.picture,\n    \"tags\": []\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 384,
        "y": 661,
        "wires": [
            [
                "ec1a1f1a.a18d1"
            ]
        ]
    }
]